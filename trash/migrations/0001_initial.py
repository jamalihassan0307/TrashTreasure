# Generated by Django 5.1.7 on 2025-08-13 02:07

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='TrashSubmission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('track_id', models.CharField(editable=False, max_length=15, unique=True)),
                ('trash_description', models.CharField(blank=True, max_length=255, verbose_name='Trash Description')),
                ('quantity_kg', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, verbose_name='Estimated Weight (kg)')),
                ('location', models.CharField(max_length=255)),
                ('image', models.ImageField(upload_to='trash_images/')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('assigned', 'Assigned to Rider'), ('on_the_way', 'Rider On The Way'), ('arrived', 'Rider Arrived at Location'), ('picked', 'Trash Picked Up'), ('collected', 'Collection Verified'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('assigned_at', models.DateTimeField(blank=True, null=True)),
                ('pickup_time', models.DateTimeField(blank=True, null=True)),
                ('completion_time', models.DateTimeField(blank=True, null=True)),
                ('rider_notes', models.TextField(blank=True, verbose_name="Rider's Notes")),
                ('rider', models.ForeignKey(blank=True, limit_choices_to={'user_type': 'rider'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_collections', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='submissions', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='RewardPointHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('points', models.IntegerField()),
                ('reason', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('awarded_by', models.ForeignKey(blank=True, limit_choices_to={'user_type__in': ['rider', 'admin']}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='awarded_points', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='point_history', to=settings.AUTH_USER_MODEL)),
                ('submission', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='trash.trashsubmission')),
            ],
        ),
        migrations.CreateModel(
            name='CollectionRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('trash_type', models.CharField(max_length=50, verbose_name='Actual Trash Type')),
                ('actual_quantity', models.DecimalField(decimal_places=2, max_digits=6, verbose_name='Actual Weight (kg)')),
                ('points_awarded', models.PositiveIntegerField(default=0, verbose_name='Reward Points')),
                ('collected_image', models.ImageField(blank=True, null=True, upload_to='collection_images/')),
                ('collected_at', models.DateTimeField(auto_now_add=True)),
                ('admin_verified', models.BooleanField(default=False)),
                ('verified_at', models.DateTimeField(blank=True, null=True)),
                ('rider', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='collections', to=settings.AUTH_USER_MODEL)),
                ('verified_by', models.ForeignKey(blank=True, limit_choices_to={'user_type': 'admin'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='verified_collections', to=settings.AUTH_USER_MODEL)),
                ('submission', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='collection_record', to='trash.trashsubmission')),
            ],
        ),
    ]
